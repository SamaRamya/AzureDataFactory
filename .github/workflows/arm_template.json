{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "df-11912-d-001"
        },
        "ls_az_sql_db_cdp_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'ls_az_sql_db_cdp'"
        },
        "ls_sftp_cdp_password": {
            "type": "secureString",
            "metadata": "Secure string for 'password' of 'ls_sftp_cdp'"
        },
        "ls_az_adls_cdp_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'ls_az_adls_cdp'"
        },
        "ls_az_kv_cdp_properties_typeProperties_baseUrl": {
            "type": "string",
            "defaultValue": "https://kv-11912-d-001.vault.azure.net/"
        },
        "ls_sftp_cdp_properties_typeProperties_host": {
            "type": "string",
            "defaultValue": "crow.extra.chrysler.com"
        },
        "ls_sftp_cdp_properties_typeProperties_userName": {
            "type": "string",
            "defaultValue": "sf5155t2"
        },
        "trigger_daily_properties_typeProperties_scope": {
            "type": "string",
            "defaultValue": "/subscriptions/e911357a-6718-48a7-819b-0648f0efaff2/resourceGroups/rg-11912-d-001/providers/Microsoft.Storage/storageAccounts/st11912d001"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/ls_az_kv_cdp')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureKeyVault",
                "typeProperties": {
                    "baseUrl": "[parameters('ls_az_kv_cdp_properties_typeProperties_baseUrl')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ls_az_sql_db_cdp')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureSqlDatabase",
                "typeProperties": {
                    "connectionString": "[parameters('ls_az_sql_db_cdp_connectionString')]",
                    "password": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "ls_az_kv_cdp",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "fcaadmin"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_az_kv_cdp')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ls_sftp_cdp')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "Sftp",
                "typeProperties": {
                    "host": "[parameters('ls_sftp_cdp_properties_typeProperties_host')]",
                    "port": 22,
                    "skipHostKeyValidation": true,
                    "authenticationType": "Basic",
                    "userName": "[parameters('ls_sftp_cdp_properties_typeProperties_userName')]",
                    "password": {
                        "type": "SecureString",
                        "value": "[parameters('ls_sftp_cdp_password')]"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ls_az_adls_cdp')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobStorage",
                "typeProperties": {
                    "connectionString": "[parameters('ls_az_adls_cdp_connectionString')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_az_sql_db')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_az_sql_db_cdp",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "TableName": {
                        "type": "string"
                    },
                    "SchemaName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "SQL"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {
                    "schema": {
                        "value": "@dataset().SchemaName",
                        "type": "Expression"
                    },
                    "table": {
                        "value": "@dataset().TableName",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_az_sql_db_cdp')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_adls_txt')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_az_adls_cdp",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "ADLS_FolderName": {
                        "type": "string"
                    },
                    "ADLS_FileName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "ADLS"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": {
                            "value": "@dataset().ADLS_FileName",
                            "type": "Expression"
                        },
                        "folderPath": {
                            "value": "@dataset().ADLS_FolderName",
                            "type": "Expression"
                        },
                        "container": "cdp"
                    },
                    "columnDelimiter": "|",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_az_adls_cdp')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_sftp_txt')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_sftp_cdp",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "SFTP_FolderName": {
                        "type": "string"
                    },
                    "SFTP_FileName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "SFTP"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "SftpLocation",
                        "fileName": {
                            "value": "@dataset().SFTP_FileName",
                            "type": "Expression"
                        },
                        "folderPath": {
                            "value": "@dataset().SFTP_FolderName",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": "|",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_sftp_cdp')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_sftp_folder')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_sftp_cdp",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "SFTP_Folder": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "SFTP"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "SftpLocation",
                        "folderPath": {
                            "value": "@dataset().SFTP_Folder",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_sftp_cdp')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_dflw_adls')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_az_adls_cdp",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "ADLS_FileName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "ADLS"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": {
                            "value": "@dataset().ADLS_FileName",
                            "type": "Expression"
                        },
                        "folderPath": "stg",
                        "container": "cdp"
                    },
                    "columnDelimiter": "|",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_az_adls_cdp')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_dflw_db')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_az_sql_db_cdp",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "SQL"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {
                    "schema": "cdp_adl",
                    "table": "customer"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_az_sql_db_cdp')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_adls_folder')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_az_adls_cdp",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "ADLS"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "folderPath": "stg",
                        "container": "cdp"
                    },
                    "columnDelimiter": "|",
                    "escapeChar": "\\",
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_az_adls_cdp')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_dflw_adls_del')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_az_adls_cdp",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "ADLS_Del_FileName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "ADLS"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": {
                            "value": "@dataset().ADLS_Del_FileName",
                            "type": "Expression"
                        },
                        "folderPath": "stg",
                        "container": "cdp"
                    },
                    "columnDelimiter": "|",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_az_adls_cdp')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_az_sql_db_del')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_az_sql_db_cdp",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "TableName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "SQL"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {
                    "schema": "cdp_adl",
                    "table": {
                        "value": "@dataset().TableName",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_az_sql_db_cdp')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/trigger_daily')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Stopped",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "mpl_cdp_adl",
                            "type": "PipelineReference"
                        },
                        "parameters": {}
                    }
                ],
                "type": "BlobEventsTrigger",
                "typeProperties": {
                    "blobPathBeginsWith": "/cdp/blobs/stg/done.txt",
                    "ignoreEmptyBlobs": true,
                    "scope": "[parameters('trigger_daily_properties_typeProperties_scope')]",
                    "events": [
                        "Microsoft.Storage.BlobCreated"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/mpl_cdp_adl')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/trigger_nba_30mins')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Stopped",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "mpl_cdp_adl_nba",
                            "type": "PipelineReference"
                        },
                        "parameters": {}
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Minute",
                        "interval": 30,
                        "startTime": "2022-07-06T14:55:00",
                        "endTime": "2022-07-30T00:00:00",
                        "timeZone": "India Standard Time"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/mpl_cdp_adl_nba')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/df_bkp_and_del_recs')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "ds_dflw_adls",
                                "type": "DatasetReference"
                            },
                            "name": "srcadlsdelfile"
                        },
                        {
                            "dataset": {
                                "referenceName": "ds_dflw_db",
                                "type": "DatasetReference"
                            },
                            "name": "srctblcust"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ds_az_sql_db",
                                "type": "DatasetReference"
                            },
                            "name": "sinkcustdel"
                        },
                        {
                            "dataset": {
                                "referenceName": "ds_dflw_db",
                                "type": "DatasetReference"
                            },
                            "name": "sinkcust"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "join1"
                        },
                        {
                            "name": "drvdcolts"
                        },
                        {
                            "name": "alterRowDelete"
                        }
                    ],
                    "scriptLines": [
                        "parameters{",
                        "     FileName as string",
                        "}",
                        "source(output(",
                        "          fca_id as string,",
                        "          time as integer",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false) ~> srcadlsdelfile",
                        "source(output(",
                        "          fca_id as string,",
                        "          i_consmr as string,",
                        "          assignd_dlr as string,",
                        "          vin as string,",
                        "          n_persn_first as string,",
                        "          n_persn_last as string,",
                        "          home_phone as string,",
                        "          work_phone as string,",
                        "          cell_phone as string,",
                        "          email_addr as string,",
                        "          addr_line1 as string,",
                        "          addr_line2 as string,",
                        "          city as string,",
                        "          state as string,",
                        "          zip as string,",
                        "          scre as decimal(38,18),",
                        "          curr_vhcl_imge as string,",
                        "          curr_mod_yr as long,",
                        "          curr_brnd as string,",
                        "          curr_nmeplt as string,",
                        "          curr_vhcl_stat as string,",
                        "          last_service_apt as string,",
                        "          vchl_dspsl as string,",
                        "          curr_sale_type as string,",
                        "          vhcl_mlge as long,",
                        "          active_shopper as string,",
                        "          recom_vhcl_imge as string,",
                        "          recom_mod_yr as long,",
                        "          recom_brnd as string,",
                        "          recom_nmeplt as string,",
                        "          inctv_dtls as string,",
                        "          offr_dtls as string,",
                        "          src_load_time as long,",
                        "          ga_user_id as string,",
                        "          adobe_user_id as string,",
                        "          t_stmp_add as timestamp,",
                        "          i_logon_add as string,",
                        "          t_stmp_upd as timestamp,",
                        "          i_logon_upd as string,",
                        "          extract_time as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     isolationLevel: 'READ_UNCOMMITTED',",
                        "     format: 'table') ~> srctblcust",
                        "srcadlsdelfile, srctblcust join(srcadlsdelfile@fca_id == srctblcust@fca_id,",
                        "     joinType:'inner',",
                        "     matchType:'exact',",
                        "     ignoreSpaces: false,",
                        "     broadcast: 'auto')~> join1",
                        "join1 derive(delete_ts = split(split($FileName,'DELETES_')[2],'.')[1]) ~> drvdcolts",
                        "join1 alterRow(deleteIf(true())) ~> alterRowDelete",
                        "drvdcolts sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     deletable:false,",
                        "     insertable:true,",
                        "     updateable:false,",
                        "     upsertable:false,",
                        "     format: 'table',",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     saveOrder: 1,",
                        "     errorHandlingOption: 'stopOnFirstError',",
                        "     mapColumn(",
                        "          fca_id = srctblcust@fca_id,",
                        "          i_consmr,",
                        "          assignd_dlr,",
                        "          vin,",
                        "          n_persn_first,",
                        "          n_persn_last,",
                        "          home_phone,",
                        "          work_phone,",
                        "          cell_phone,",
                        "          email_addr,",
                        "          addr_line1,",
                        "          addr_line2,",
                        "          city,",
                        "          state,",
                        "          zip,",
                        "          scre,",
                        "          curr_vhcl_imge,",
                        "          curr_mod_yr,",
                        "          curr_brnd,",
                        "          curr_nmeplt,",
                        "          curr_vhcl_stat,",
                        "          last_service_apt,",
                        "          vchl_dspsl,",
                        "          curr_sale_type,",
                        "          vhcl_mlge,",
                        "          active_shopper,",
                        "          recom_vhcl_imge,",
                        "          recom_mod_yr,",
                        "          recom_brnd,",
                        "          recom_nmeplt,",
                        "          inctv_dtls,",
                        "          offr_dtls,",
                        "          src_load_time,",
                        "          ga_user_id,",
                        "          adobe_user_id,",
                        "          t_stmp_add,",
                        "          i_logon_add,",
                        "          t_stmp_upd,",
                        "          i_logon_upd,",
                        "          extract_time,",
                        "          delete_ts",
                        "     )) ~> sinkcustdel",
                        "alterRowDelete sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     deletable:true,",
                        "     insertable:false,",
                        "     updateable:false,",
                        "     upsertable:false,",
                        "     keys:['fca_id'],",
                        "     format: 'table',",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     saveOrder: 2,",
                        "     errorHandlingOption: 'stopOnFirstError',",
                        "     mapColumn(",
                        "          fca_id = srctblcust@fca_id,",
                        "          i_consmr,",
                        "          assignd_dlr,",
                        "          vin,",
                        "          n_persn_first,",
                        "          n_persn_last,",
                        "          home_phone,",
                        "          work_phone,",
                        "          cell_phone,",
                        "          email_addr,",
                        "          addr_line1,",
                        "          addr_line2,",
                        "          city,",
                        "          state,",
                        "          zip,",
                        "          scre,",
                        "          curr_vhcl_imge,",
                        "          curr_mod_yr,",
                        "          curr_brnd,",
                        "          curr_nmeplt,",
                        "          curr_vhcl_stat,",
                        "          last_service_apt,",
                        "          vchl_dspsl,",
                        "          curr_sale_type,",
                        "          vhcl_mlge,",
                        "          active_shopper,",
                        "          recom_vhcl_imge,",
                        "          recom_mod_yr,",
                        "          recom_brnd,",
                        "          recom_nmeplt,",
                        "          inctv_dtls,",
                        "          offr_dtls,",
                        "          src_load_time,",
                        "          ga_user_id,",
                        "          adobe_user_id,",
                        "          t_stmp_add,",
                        "          i_logon_add,",
                        "          t_stmp_upd,",
                        "          i_logon_upd,",
                        "          extract_time",
                        "     )) ~> sinkcust"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_dflw_adls')]",
                "[concat(variables('factoryId'), '/datasets/ds_dflw_db')]",
                "[concat(variables('factoryId'), '/datasets/ds_az_sql_db')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/df_load_cust_recs')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "ds_dflw_adls",
                                "type": "DatasetReference"
                            },
                            "name": "srcadlsfile"
                        },
                        {
                            "dataset": {
                                "referenceName": "ds_dflw_db",
                                "type": "DatasetReference"
                            },
                            "name": "srctblcust"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ds_dflw_db",
                                "type": "DatasetReference"
                            },
                            "name": "tgtdb"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "getextracttime"
                        },
                        {
                            "name": "join"
                        },
                        {
                            "name": "alterRowupsert"
                        },
                        {
                            "name": "updaudtcols"
                        },
                        {
                            "name": "filterCheck"
                        },
                        {
                            "name": "drvdcolupsertCheck"
                        },
                        {
                            "name": "formatarraycols1"
                        },
                        {
                            "name": "formatarraycols2"
                        },
                        {
                            "name": "formatarraycols3"
                        },
                        {
                            "name": "formatarraycols4"
                        }
                    ],
                    "scriptLines": [
                        "parameters{",
                        "     FileName as string",
                        "}",
                        "source(output(",
                        "          fca_id as string,",
                        "          i_consmr as integer,",
                        "          assignd_dlr as integer,",
                        "          vin as string,",
                        "          n_persn_first as string,",
                        "          n_persn_last as string,",
                        "          home_phone as long,",
                        "          work_phone as long,",
                        "          cell_phone as long,",
                        "          email_addr as string,",
                        "          addr_line1 as string,",
                        "          addr_line2 as string,",
                        "          city as string,",
                        "          state as string,",
                        "          zip as integer,",
                        "          scre as double,",
                        "          curr_vhcl_imge as string,",
                        "          curr_mod_yr as double,",
                        "          curr_brnd as string,",
                        "          curr_nmeplt as string,",
                        "          curr_vhcl_stat as string,",
                        "          last_service_apt as date,",
                        "          vchl_dspsl as string,",
                        "          curr_sale_type as string,",
                        "          vhcl_mlge as double,",
                        "          active_shopper as string,",
                        "          recom_vhcl_imge as string,",
                        "          recom_mod_yr as double,",
                        "          recom_brnd as string,",
                        "          recom_nmeplt as string,",
                        "          ga_user_id as string,",
                        "          adobe_user_id as string,",
                        "          inctv_dtls as string,",
                        "          offr_dtls as string,",
                        "          time as integer",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     inferDriftedColumnTypes: true,",
                        "     ignoreNoFilesFound: false) ~> srcadlsfile",
                        "source(output(",
                        "          fca_id_tgt as string,",
                        "          extract_time_tgt as string,",
                        "          t_stmp_add as timestamp,",
                        "          t_stmp_upd as timestamp,",
                        "          i_logon_add as string,",
                        "          i_logon_upd as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     inferDriftedColumnTypes: true,",
                        "     isolationLevel: 'READ_UNCOMMITTED',",
                        "     query: 'select \\nfca_id as fca_id_tgt,\\n extract_time as extract_time_tgt,\\n t_stmp_add,\\nt_stmp_upd,\\ni_logon_add,\\ni_logon_upd \\nfrom cdp_adl.customer',",
                        "     format: 'query') ~> srctblcust",
                        "srcadlsfile derive(extract_time = split(split($FileName,'DATA_')[2],'.')[1]) ~> getextracttime",
                        "getextracttime, srctblcust join(fca_id == fca_id_tgt,",
                        "     joinType:'left',",
                        "     matchType:'exact',",
                        "     ignoreSpaces: false,",
                        "     broadcast: 'auto')~> join",
                        "join alterRow(upsertIf(extract_time>extract_time_tgt)) ~> alterRowupsert",
                        "filterCheck derive(t_stmp_add = coalesce(t_stmp_add,fromUTC(currentUTC(),'EST')),",
                        "          i_logon_add = coalesce(i_logon_add,'adf_insert'),",
                        "          t_stmp_upd = case(not(isNull(fca_id_tgt)),fromUTC(currentUTC(),'EST')),",
                        "          i_logon_upd = case(not(isNull(fca_id_tgt)),'adf_update')) ~> updaudtcols",
                        "drvdcolupsertCheck filter(uspertCheck==true()) ~> filterCheck",
                        "alterRowupsert derive(uspertCheck = isUpsert(1) || isNull(fca_id_tgt)) ~> drvdcolupsertCheck",
                        "updaudtcols derive(offr_dtls = replace(offr_dtls,'\"\"','\"'),",
                        "          inctv_dtls = replace(inctv_dtls,'\"\"','\"')) ~> formatarraycols1",
                        "formatarraycols1 derive(offr_dtls = replace(offr_dtls,'\"[\\'{','[{'),",
                        "          inctv_dtls = replace(inctv_dtls,'\"[\\'{','[{')) ~> formatarraycols2",
                        "formatarraycols2 derive(offr_dtls = replace(offr_dtls,'}\\']\"','}]'),",
                        "          inctv_dtls = replace(inctv_dtls,'}\\']\"','}]')) ~> formatarraycols3",
                        "formatarraycols3 derive(offr_dtls = replace(offr_dtls,'}\\', \\'{','}, {'),",
                        "          inctv_dtls = replace(inctv_dtls,'}\\', \\'{','}, {')) ~> formatarraycols4",
                        "formatarraycols4 sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     deletable:false,",
                        "     insertable:true,",
                        "     updateable:false,",
                        "     upsertable:true,",
                        "     keys:['fca_id'],",
                        "     format: 'table',",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     errorHandlingOption: 'stopOnFirstError',",
                        "     mapColumn(",
                        "          fca_id,",
                        "          i_consmr,",
                        "          assignd_dlr,",
                        "          vin,",
                        "          n_persn_first,",
                        "          n_persn_last,",
                        "          home_phone,",
                        "          work_phone,",
                        "          cell_phone,",
                        "          email_addr,",
                        "          addr_line1,",
                        "          addr_line2,",
                        "          city,",
                        "          state,",
                        "          zip,",
                        "          scre,",
                        "          curr_vhcl_imge,",
                        "          curr_mod_yr,",
                        "          curr_brnd,",
                        "          curr_nmeplt,",
                        "          curr_vhcl_stat,",
                        "          last_service_apt,",
                        "          vchl_dspsl,",
                        "          curr_sale_type,",
                        "          vhcl_mlge,",
                        "          active_shopper,",
                        "          recom_vhcl_imge,",
                        "          recom_mod_yr,",
                        "          recom_brnd,",
                        "          recom_nmeplt,",
                        "          ga_user_id,",
                        "          adobe_user_id,",
                        "          inctv_dtls,",
                        "          offr_dtls,",
                        "          src_load_time = time,",
                        "          extract_time,",
                        "          t_stmp_add,",
                        "          t_stmp_upd,",
                        "          i_logon_add,",
                        "          i_logon_upd",
                        "     )) ~> tgtdb"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_dflw_adls')]",
                "[concat(variables('factoryId'), '/datasets/ds_dflw_db')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/df_load_nba_recs')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "NBA"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "ds_dflw_adls",
                                "type": "DatasetReference"
                            },
                            "name": "srcadlsfile"
                        },
                        {
                            "dataset": {
                                "referenceName": "ds_dflw_db",
                                "type": "DatasetReference"
                            },
                            "name": "srctblcust"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ds_az_sql_db",
                                "type": "DatasetReference"
                            },
                            "name": "tgtdb"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "getextracttime"
                        },
                        {
                            "name": "join"
                        },
                        {
                            "name": "alterRowupsert"
                        },
                        {
                            "name": "updaudtcols"
                        },
                        {
                            "name": "filterCheck"
                        },
                        {
                            "name": "drvdcolupsertCheck"
                        }
                    ],
                    "scriptLines": [
                        "parameters{",
                        "     FileName as string",
                        "}",
                        "source(output(",
                        "          mcvisid as string,",
                        "          fca_id as string,",
                        "          nba as string,",
                        "          zip_code as string,",
                        "          brand as string,",
                        "          modelyearcode as string,",
                        "          tier as string,",
                        "          ccode as string,",
                        "          llp as string,",
                        "          ulp as string,",
                        "          extrior_clr as string,",
                        "          intrior_typ as string,",
                        "          seat_typ as string,",
                        "          options as string,",
                        "          visit_time as string,",
                        "          time as integer",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     inferDriftedColumnTypes: true,",
                        "     ignoreNoFilesFound: false) ~> srcadlsfile",
                        "source(output(",
                        "          mcvisid_tgt as string,",
                        "          brand_tgt as string,",
                        "          extract_time_tgt as string,",
                        "          t_stmp_add as timestamp,",
                        "          t_stmp_upd as timestamp,",
                        "          i_logon_add as string,",
                        "          i_logon_upd as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     inferDriftedColumnTypes: true,",
                        "     isolationLevel: 'READ_UNCOMMITTED',",
                        "     query: 'select \\nmcvisid as mcvisid_tgt,\\nbrand as brand_tgt,\\nextract_time as extract_time_tgt,\\nt_stmp_add,\\nt_stmp_upd,\\ni_logon_add,\\ni_logon_upd \\nfrom cdp_adl.brand_site_nba',",
                        "     format: 'query') ~> srctblcust",
                        "srcadlsfile derive(extract_time = split(split($FileName,'NBA_DATA_')[2],'.')[1]) ~> getextracttime",
                        "getextracttime, srctblcust join(mcvisid == mcvisid_tgt",
                        "     && brand == brand_tgt,",
                        "     joinType:'left',",
                        "     matchType:'exact',",
                        "     ignoreSpaces: false,",
                        "     broadcast: 'auto')~> join",
                        "join alterRow(upsertIf(extract_time>extract_time_tgt)) ~> alterRowupsert",
                        "filterCheck derive(t_stmp_add = coalesce(t_stmp_add,fromUTC(currentUTC(),'EST')),",
                        "          i_logon_add = coalesce(i_logon_add,'adf_insert'),",
                        "          t_stmp_upd = case(not(isNull(mcvisid_tgt))&&not(isNull(brand_tgt)),fromUTC(currentUTC(),'EST')),",
                        "          i_logon_upd = case(not(isNull(mcvisid_tgt))&&not(isNull(mcvisid_tgt)),'adf_update'),",
                        "          mcvisid = iifNull(mcvisid,''),",
                        "          fca_id = iifNull(fca_id,''),",
                        "          nba = iifNull(nba,''),",
                        "          brand = iifNull(brand,''),",
                        "          modelyearcode = iifNull(modelyearcode,''),",
                        "          tier = iifNull(tier,''),",
                        "          ccode = iifNull(ccode,''),",
                        "          llp = iifNull(llp,''),",
                        "          ulp = iifNull(ulp,''),",
                        "          extrior_clr = iifNull(extrior_clr,''),",
                        "          intrior_typ = iifNull(intrior_typ,''),",
                        "          seat_typ = iifNull(seat_typ,''),",
                        "          options = iifNull(options,''),",
                        "          zip_code = iifNull(zip_code,''),",
                        "          visit_time = iifNull(visit_time,'')) ~> updaudtcols",
                        "drvdcolupsertCheck filter(uspertCheck==true()) ~> filterCheck",
                        "alterRowupsert derive(uspertCheck = isUpsert(1) || isNull(mcvisid_tgt) || isNull(brand_tgt)) ~> drvdcolupsertCheck",
                        "updaudtcols sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     deletable:false,",
                        "     insertable:true,",
                        "     updateable:false,",
                        "     upsertable:true,",
                        "     keys:['mcvisid','brand'],",
                        "     format: 'table',",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     errorHandlingOption: 'stopOnFirstError',",
                        "     mapColumn(",
                        "          mcvisid,",
                        "          fca_id,",
                        "          nba,",
                        "          zip_code,",
                        "          brand,",
                        "          modelyearcode,",
                        "          tier,",
                        "          ccode,",
                        "          llp,",
                        "          ulp,",
                        "          extrior_clr,",
                        "          intrior_typ,",
                        "          seat_typ,",
                        "          options,",
                        "          visit_time,",
                        "          time,",
                        "          extract_time,",
                        "          t_stmp_add,",
                        "          t_stmp_upd,",
                        "          i_logon_add,",
                        "          i_logon_upd",
                        "     )) ~> tgtdb"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_dflw_adls')]",
                "[concat(variables('factoryId'), '/datasets/ds_dflw_db')]",
                "[concat(variables('factoryId'), '/datasets/ds_az_sql_db')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/df_bkp_and_del_recs_nba')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "NBA"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "ds_dflw_adls",
                                "type": "DatasetReference"
                            },
                            "name": "srcadlsnbadelfile"
                        },
                        {
                            "dataset": {
                                "referenceName": "ds_az_sql_db",
                                "type": "DatasetReference"
                            },
                            "name": "srcnba"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ds_az_sql_db",
                                "type": "DatasetReference"
                            },
                            "name": "sinknbabkp"
                        },
                        {
                            "dataset": {
                                "referenceName": "ds_az_sql_db",
                                "type": "DatasetReference"
                            },
                            "name": "sinknba"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "join1"
                        },
                        {
                            "name": "drvdcolts"
                        },
                        {
                            "name": "alterRowDelete"
                        }
                    ],
                    "scriptLines": [
                        "parameters{",
                        "     FileName as string",
                        "}",
                        "source(output(",
                        "          mcvisid as string,",
                        "          brand as string,",
                        "          time as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false) ~> srcadlsnbadelfile",
                        "source(output(",
                        "          mcvisid as string,",
                        "          fca_id as string,",
                        "          nba as string,",
                        "          zip_code as string,",
                        "          brand as string,",
                        "          modelyearcode as string,",
                        "          tier as string,",
                        "          ccode as string,",
                        "          llp as string,",
                        "          ulp as string,",
                        "          extrior_clr as string,",
                        "          intrior_typ as string,",
                        "          seat_typ as string,",
                        "          options as string,",
                        "          visit_time as timestamp,",
                        "          src_load_time as long,",
                        "          t_stmp_add as timestamp,",
                        "          i_logon_add as string,",
                        "          t_stmp_upd as timestamp,",
                        "          i_logon_upd as string,",
                        "          extract_time as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     isolationLevel: 'READ_UNCOMMITTED',",
                        "     format: 'table') ~> srcnba",
                        "srcadlsnbadelfile, srcnba join(srcadlsnbadelfile@mcvisid == srcnba@mcvisid",
                        "     && srcadlsnbadelfile@brand == srcnba@brand,",
                        "     joinType:'inner',",
                        "     matchType:'exact',",
                        "     ignoreSpaces: false,",
                        "     broadcast: 'auto')~> join1",
                        "join1 derive(delete_ts = split(split($FileName,'DELETES_')[2],'.')[1]) ~> drvdcolts",
                        "join1 alterRow(deleteIf(true())) ~> alterRowDelete",
                        "drvdcolts sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     deletable:false,",
                        "     insertable:true,",
                        "     updateable:false,",
                        "     upsertable:false,",
                        "     format: 'table',",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     saveOrder: 1,",
                        "     errorHandlingOption: 'stopOnFirstError',",
                        "     mapColumn(",
                        "          mcvisid = srcnba@mcvisid,",
                        "          fca_id,",
                        "          nba,",
                        "          zip_code,",
                        "          brand = srcnba@brand,",
                        "          modelyearcode,",
                        "          tier,",
                        "          ccode,",
                        "          llp,",
                        "          ulp,",
                        "          extrior_clr,",
                        "          intrior_typ,",
                        "          seat_typ,",
                        "          options,",
                        "          visit_time,",
                        "          src_load_time,",
                        "          t_stmp_add,",
                        "          i_logon_add,",
                        "          t_stmp_upd,",
                        "          i_logon_upd,",
                        "          extract_time,",
                        "          delete_ts",
                        "     )) ~> sinknbabkp",
                        "alterRowDelete sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     deletable:true,",
                        "     insertable:false,",
                        "     updateable:false,",
                        "     upsertable:false,",
                        "     keys:['mcvisid','brand'],",
                        "     format: 'table',",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     saveOrder: 2,",
                        "     errorHandlingOption: 'stopOnFirstError',",
                        "     mapColumn(",
                        "          mcvisid = srcnba@mcvisid,",
                        "          fca_id,",
                        "          nba,",
                        "          zip_code,",
                        "          brand = srcnba@brand,",
                        "          modelyearcode,",
                        "          tier,",
                        "          ccode,",
                        "          llp,",
                        "          ulp,",
                        "          extrior_clr,",
                        "          intrior_typ,",
                        "          seat_typ,",
                        "          options,",
                        "          visit_time,",
                        "          src_load_time,",
                        "          t_stmp_add,",
                        "          i_logon_add,",
                        "          t_stmp_upd,",
                        "          i_logon_upd,",
                        "          extract_time",
                        "     )) ~> sinknba"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_dflw_adls')]",
                "[concat(variables('factoryId'), '/datasets/ds_az_sql_db')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_src_stg_adhoc_run')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "sp_batchinit",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[cdp_adl].[sp_BatchInit]",
                            "storedProcedureParameters": {
                                "BatchId": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "BatchName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_az_sql_db_cdp",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "sp_batchend",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "del_src_sftp_file",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[cdp_adl].[sp_BatchEnd]",
                            "storedProcedureParameters": {
                                "BatchId": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "BatchName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_az_sql_db_cdp",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "cp_sftp_stg",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "sp_batchinit",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "SftpReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false,
                                    "disableChunking": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings",
                                    "copyBehavior": "PreserveHierarchy"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false,
                            "enableSkipIncompatibleRow": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_sftp_txt",
                                "type": "DatasetReference",
                                "parameters": {
                                    "SFTP_FolderName": {
                                        "value": "@pipeline().parameters.SFTPFolderName",
                                        "type": "Expression"
                                    },
                                    "SFTP_FileName": {
                                        "value": "@pipeline().parameters.SFTPFileName",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_adls_txt",
                                "type": "DatasetReference",
                                "parameters": {
                                    "ADLS_FolderName": "stg",
                                    "ADLS_FileName": {
                                        "value": "@pipeline().parameters.SFTPFileName",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "del_src_sftp_file",
                        "type": "Delete",
                        "dependsOn": [
                            {
                                "activity": "cp_sftp_stg",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_sftp_txt",
                                "type": "DatasetReference",
                                "parameters": {
                                    "SFTP_FolderName": {
                                        "value": "@pipeline().parameters.SFTPFolderName",
                                        "type": "Expression"
                                    },
                                    "SFTP_FileName": {
                                        "value": "@pipeline().parameters.SFTPFileName",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "SftpReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false,
                                "disableChunking": false
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "SFTPFolderName": {
                        "type": "string"
                    },
                    "SFTPFileName": {
                        "type": "string"
                    }
                },
                "variables": {
                    "Date": {
                        "type": "String"
                    },
                    "lastrun": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "2. Adhoc Run"
                },
                "annotations": [],
                "lastPublishTime": "2022-05-11T07:38:53Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_az_sql_db_cdp')]",
                "[concat(variables('factoryId'), '/datasets/ds_sftp_txt')]",
                "[concat(variables('factoryId'), '/datasets/ds_adls_txt')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_adls_archive')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "get_meta_adls_stg",
                        "type": "GetMetadata",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_adls_folder",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "fieldList": [
                                "childItems"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobStorageReadSettings",
                                "recursive": true,
                                "modifiedDatetimeStart": {
                                    "value": "@getPastTime(210,'Day')",
                                    "type": "Expression"
                                },
                                "modifiedDatetimeEnd": {
                                    "value": "@getPastTime(30,'Day')",
                                    "type": "Expression"
                                },
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "ForEach1",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "get_meta_adls_stg",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('get_meta_adls_stg').output.childItems",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "cp_stg_archive",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobStorageReadSettings",
                                                "recursive": true,
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobStorageWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_adls_txt",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ADLS_FolderName": "stg",
                                                "ADLS_FileName": "@item().name"
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_adls_txt",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ADLS_FolderName": "archive",
                                                "ADLS_FileName": "@item().name"
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "delete_stg",
                                    "type": "Delete",
                                    "dependsOn": [
                                        {
                                            "activity": "cp_stg_archive",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "ds_adls_txt",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ADLS_FolderName": "stg",
                                                "ADLS_FileName": "@item().name"
                                            }
                                        },
                                        "enableLogging": false,
                                        "storeSettings": {
                                            "type": "AzureBlobStorageReadSettings",
                                            "recursive": true,
                                            "enablePartitionDiscovery": false
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "variables": {
                    "countFiles": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "3. Components"
                },
                "annotations": [],
                "lastPublishTime": "2022-05-11T07:34:50Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_adls_folder')]",
                "[concat(variables('factoryId'), '/datasets/ds_adls_txt')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_check_file_availability')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Incremental",
                        "type": "GetMetadata",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_sftp_txt",
                                "type": "DatasetReference",
                                "parameters": {
                                    "SFTP_FolderName": "/incoming/CDP_ADL/IncrementFiles/",
                                    "SFTP_FileName": "done.txt"
                                }
                            },
                            "fieldList": [
                                "exists"
                            ],
                            "storeSettings": {
                                "type": "SftpReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false,
                                "disableChunking": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "If Condition1",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Incremental",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Deletes",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@and(equals(activity('Incremental').output.exists,true),equals(activity('Deletes').output.exists,true))",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "cp_done_adls",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "SftpReadSettings",
                                                "recursive": true,
                                                "enablePartitionDiscovery": false,
                                                "disableChunking": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobStorageWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_sftp_txt",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "SFTP_FolderName": "/incoming/CDP_ADL/IncrementFiles/",
                                                "SFTP_FileName": "done.txt"
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_adls_txt",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ADLS_FolderName": "stg",
                                                "ADLS_FileName": "done.txt"
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "IncrDoneDelete",
                                    "type": "Delete",
                                    "dependsOn": [
                                        {
                                            "activity": "cp_done_adls",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "ds_sftp_txt",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "SFTP_FolderName": "/incoming/CDP_ADL/IncrementFiles/",
                                                "SFTP_FileName": "done.txt"
                                            }
                                        },
                                        "enableLogging": false,
                                        "storeSettings": {
                                            "type": "SftpReadSettings",
                                            "recursive": true,
                                            "enablePartitionDiscovery": false,
                                            "disableChunking": false
                                        }
                                    }
                                },
                                {
                                    "name": "DelDoneDelete",
                                    "type": "Delete",
                                    "dependsOn": [
                                        {
                                            "activity": "cp_done_adls",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "ds_sftp_txt",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "SFTP_FolderName": "/incoming/CDP_ADL/DeleteFiles/",
                                                "SFTP_FileName": "done.txt"
                                            }
                                        },
                                        "enableLogging": false,
                                        "storeSettings": {
                                            "type": "SftpReadSettings",
                                            "recursive": true,
                                            "enablePartitionDiscovery": false,
                                            "disableChunking": false
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Deletes",
                        "type": "GetMetadata",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_sftp_txt",
                                "type": "DatasetReference",
                                "parameters": {
                                    "SFTP_FolderName": "/incoming/CDP_ADL/DeleteFiles/",
                                    "SFTP_FileName": "done.txt"
                                }
                            },
                            "fieldList": [
                                "exists"
                            ],
                            "storeSettings": {
                                "type": "SftpReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false,
                                "disableChunking": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "variables": {
                    "Test": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "1. Daily Run"
                },
                "annotations": [],
                "lastPublishTime": "2022-05-11T08:13:23Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_sftp_txt')]",
                "[concat(variables('factoryId'), '/datasets/ds_adls_txt')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/mpl_cdp_adl')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Data_Load",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pl_src_db_adl_incr",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "Deletions",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Data_Load",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pl_src_db_adl_del",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "StgDoneDelete",
                        "type": "Delete",
                        "dependsOn": [
                            {
                                "activity": "Deletions",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_adls_txt",
                                "type": "DatasetReference",
                                "parameters": {
                                    "ADLS_FolderName": "stg",
                                    "ADLS_FileName": "done.txt"
                                }
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobStorageReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "folder": {
                    "name": "1. Daily Run"
                },
                "annotations": [],
                "lastPublishTime": "2022-05-11T07:53:24Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/pl_src_db_adl_incr')]",
                "[concat(variables('factoryId'), '/pipelines/pl_src_db_adl_del')]",
                "[concat(variables('factoryId'), '/datasets/ds_adls_txt')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_stg_db_adhoc_run')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "sp_batchinit",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[cdp_adl].[sp_BatchInit]",
                            "storedProcedureParameters": {
                                "BatchId": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "BatchName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_az_sql_db_cdp",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "sp_batchend",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "If Condition1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[cdp_adl].[sp_BatchEnd]",
                            "storedProcedureParameters": {
                                "BatchId": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "BatchName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_az_sql_db_cdp",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "If Condition1",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "sp_batchinit",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@contains(pipeline().parameters.ADLSFileName,'DATA')",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "df_bkp_del_recs",
                                    "type": "ExecuteDataFlow",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "1.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataflow": {
                                            "referenceName": "df_bkp_and_del_recs",
                                            "type": "DataFlowReference",
                                            "parameters": {
                                                "FileName": {
                                                    "value": "'@{pipeline().parameters.ADLSFileName}'",
                                                    "type": "Expression"
                                                }
                                            },
                                            "datasetParameters": {
                                                "srcadlsdelfile": {
                                                    "ADLS_FileName": {
                                                        "value": "@pipeline().parameters.ADLSFileName",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "srctblcust": {},
                                                "sinkcustdel": {
                                                    "TableName": "customer_deletes",
                                                    "SchemaName": "cdp_adl"
                                                },
                                                "sinkcust": {}
                                            }
                                        },
                                        "staging": {},
                                        "compute": {
                                            "coreCount": 16,
                                            "computeType": "MemoryOptimized"
                                        },
                                        "traceLevel": "None",
                                        "cacheSinks": {
                                            "firstRowOnly": true
                                        }
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "df_load_cust_db",
                                    "type": "ExecuteDataFlow",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "1.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataflow": {
                                            "referenceName": "df_load_cust_recs",
                                            "type": "DataFlowReference",
                                            "parameters": {
                                                "FileName": {
                                                    "value": "'@{pipeline().parameters.ADLSFileName}'",
                                                    "type": "Expression"
                                                }
                                            },
                                            "datasetParameters": {
                                                "srcadlsfile": {
                                                    "ADLS_FileName": {
                                                        "value": "@pipeline().parameters.ADLSFileName",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "srctblcust": {},
                                                "tgtdb": {}
                                            }
                                        },
                                        "staging": {},
                                        "compute": {
                                            "coreCount": 16,
                                            "computeType": "MemoryOptimized"
                                        },
                                        "traceLevel": "None",
                                        "cacheSinks": {
                                            "firstRowOnly": true
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "ADLSFolderName": {
                        "type": "string"
                    },
                    "ADLSFileName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "2. Adhoc Run"
                },
                "annotations": [],
                "lastPublishTime": "2022-05-24T11:30:29Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_az_sql_db_cdp')]",
                "[concat(variables('factoryId'), '/dataflows/df_bkp_and_del_recs')]",
                "[concat(variables('factoryId'), '/dataflows/df_load_cust_recs')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_src_db_adl_incr')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "gmsftp",
                        "type": "GetMetadata",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_sftp_folder",
                                "type": "DatasetReference",
                                "parameters": {
                                    "SFTP_Folder": "/incoming/CDP_ADL/IncrementFiles/"
                                }
                            },
                            "fieldList": [
                                "childItems"
                            ],
                            "storeSettings": {
                                "type": "SftpReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false,
                                "disableChunking": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "ForEach1",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "gmsftp",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "last_run",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('gmsftp').output.childItems",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "get_file_ts",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "extract_ts",
                                        "value": {
                                            "value": "@split(split(item().name,'DATA_')[1],'.')[0]",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "If Condition1",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "get_file_ts",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@greater(variables('extract_ts'),variables('lastrun'))",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "cp_sftp_stg",
                                                "type": "Copy",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "DelimitedTextSource",
                                                        "storeSettings": {
                                                            "type": "SftpReadSettings",
                                                            "recursive": true,
                                                            "enablePartitionDiscovery": false,
                                                            "disableChunking": false
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextReadSettings"
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "DelimitedTextSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobStorageWriteSettings",
                                                            "copyBehavior": "PreserveHierarchy"
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextWriteSettings",
                                                            "quoteAllText": true,
                                                            "fileExtension": ".txt"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "enableSkipIncompatibleRow": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "ds_sftp_txt",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SFTP_FolderName": "/incoming/CDP_ADL/IncrementFiles/",
                                                            "SFTP_FileName": {
                                                                "value": "@item().name",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "ds_adls_txt",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "ADLS_FolderName": "stg",
                                                            "ADLS_FileName": {
                                                                "value": "@item().name",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "del_src_sftp_file",
                                                "type": "Delete",
                                                "dependsOn": [
                                                    {
                                                        "activity": "df_load_cust_db",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "dataset": {
                                                        "referenceName": "ds_sftp_txt",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SFTP_FolderName": "/incoming/CDP_ADL/IncrementFiles/",
                                                            "SFTP_FileName": {
                                                                "value": "@item().name",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    },
                                                    "enableLogging": false,
                                                    "storeSettings": {
                                                        "type": "SftpReadSettings",
                                                        "recursive": true,
                                                        "enablePartitionDiscovery": false,
                                                        "disableChunking": false
                                                    }
                                                }
                                            },
                                            {
                                                "name": "df_load_cust_db",
                                                "type": "ExecuteDataFlow",
                                                "dependsOn": [
                                                    {
                                                        "activity": "cp_sftp_stg",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "1.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "dataflow": {
                                                        "referenceName": "df_load_cust_recs",
                                                        "type": "DataFlowReference",
                                                        "parameters": {
                                                            "FileName": {
                                                                "value": "'@{item().name}'",
                                                                "type": "Expression"
                                                            }
                                                        },
                                                        "datasetParameters": {
                                                            "srcadlsfile": {
                                                                "ADLS_FileName": "@item().name"
                                                            },
                                                            "srctblcust": {},
                                                            "tgtdb": {}
                                                        }
                                                    },
                                                    "staging": {},
                                                    "compute": {
                                                        "coreCount": 16,
                                                        "computeType": "MemoryOptimized"
                                                    },
                                                    "traceLevel": "None",
                                                    "cacheSinks": {
                                                        "firstRowOnly": true
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "lkp_get_last_run",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "sp_batchinit",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('select convert(varchar,t.lastruntime,112)+ replace(convert(varchar,t.lastruntime,108),'':'','''') as latestrun from (select max(end_time) as lastruntime from cdp_adl.batchrun where  batch_name=','''',pipeline().Pipeline,'''',')as t')\n",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_az_sql_db",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "batchrun",
                                    "SchemaName": "dbo"
                                }
                            }
                        }
                    },
                    {
                        "name": "last_run",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "lkp_get_last_run",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "lastrun",
                            "value": {
                                "value": "@activity('lkp_get_last_run').output.firstRow.latestrun",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "sp_batchinit",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[cdp_adl].[sp_BatchInit]",
                            "storedProcedureParameters": {
                                "BatchId": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "BatchName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_az_sql_db_cdp",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "sp_batchend",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "epl_adls_archive",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[cdp_adl].[sp_BatchEnd]",
                            "storedProcedureParameters": {
                                "BatchId": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "BatchName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_az_sql_db_cdp",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "epl_adls_archive",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ForEach1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pl_adls_archive",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "variables": {
                    "extract_ts": {
                        "type": "String"
                    },
                    "lastrun": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "3. Components"
                },
                "annotations": [],
                "lastPublishTime": "2022-05-24T11:30:29Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_sftp_folder')]",
                "[concat(variables('factoryId'), '/datasets/ds_az_sql_db')]",
                "[concat(variables('factoryId'), '/linkedServices/ls_az_sql_db_cdp')]",
                "[concat(variables('factoryId'), '/pipelines/pl_adls_archive')]",
                "[concat(variables('factoryId'), '/datasets/ds_sftp_txt')]",
                "[concat(variables('factoryId'), '/datasets/ds_adls_txt')]",
                "[concat(variables('factoryId'), '/dataflows/df_load_cust_recs')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_src_db_adl_del')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "gmsftp",
                        "type": "GetMetadata",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_sftp_folder",
                                "type": "DatasetReference",
                                "parameters": {
                                    "SFTP_Folder": "/incoming/CDP_ADL/DeleteFiles/"
                                }
                            },
                            "fieldList": [
                                "childItems"
                            ],
                            "storeSettings": {
                                "type": "SftpReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false,
                                "disableChunking": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "ForEach1",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "gmsftp",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "last_run",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('gmsftp').output.childItems",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "file_ts",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "extract_ts",
                                        "value": {
                                            "value": "@split(split(item().name,'DELETES_')[1],'.')[0]",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "If Condition1",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "file_ts",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@greater(variables('extract_ts'),variables('lastrun'))",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "cp_sftp_stg",
                                                "type": "Copy",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "DelimitedTextSource",
                                                        "storeSettings": {
                                                            "type": "SftpReadSettings",
                                                            "recursive": true,
                                                            "enablePartitionDiscovery": false,
                                                            "disableChunking": false
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextReadSettings"
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "DelimitedTextSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobStorageWriteSettings",
                                                            "copyBehavior": "PreserveHierarchy"
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextWriteSettings",
                                                            "quoteAllText": true,
                                                            "fileExtension": ".txt"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "enableSkipIncompatibleRow": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "ds_sftp_txt",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SFTP_FolderName": "/incoming/CDP_ADL/DeleteFiles/",
                                                            "SFTP_FileName": {
                                                                "value": "@item().name",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "ds_adls_txt",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "ADLS_FolderName": "stg",
                                                            "ADLS_FileName": {
                                                                "value": "@item().name",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "del_src_sftp_file",
                                                "type": "Delete",
                                                "dependsOn": [
                                                    {
                                                        "activity": "df_bkp_del_recs",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "dataset": {
                                                        "referenceName": "ds_sftp_txt",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SFTP_FolderName": "/incoming/CDP_ADL/DeleteFiles/",
                                                            "SFTP_FileName": {
                                                                "value": "@item().name",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    },
                                                    "enableLogging": false,
                                                    "storeSettings": {
                                                        "type": "SftpReadSettings",
                                                        "recursive": true,
                                                        "enablePartitionDiscovery": false,
                                                        "disableChunking": false
                                                    }
                                                }
                                            },
                                            {
                                                "name": "df_bkp_del_recs",
                                                "type": "ExecuteDataFlow",
                                                "dependsOn": [
                                                    {
                                                        "activity": "cp_sftp_stg",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "1.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "dataflow": {
                                                        "referenceName": "df_bkp_and_del_recs",
                                                        "type": "DataFlowReference",
                                                        "parameters": {
                                                            "FileName": {
                                                                "value": "'@{item().name}'",
                                                                "type": "Expression"
                                                            }
                                                        },
                                                        "datasetParameters": {
                                                            "srcadlsdelfile": {
                                                                "ADLS_FileName": "@item().name"
                                                            },
                                                            "srctblcust": {},
                                                            "sinkcustdel": {
                                                                "TableName": "customer_deletes",
                                                                "SchemaName": "cdp_adl"
                                                            },
                                                            "sinkcust": {}
                                                        }
                                                    },
                                                    "staging": {},
                                                    "compute": {
                                                        "coreCount": 16,
                                                        "computeType": "MemoryOptimized"
                                                    },
                                                    "traceLevel": "None",
                                                    "cacheSinks": {
                                                        "firstRowOnly": true
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "lkp_get_last_run",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "sp_batchinit",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('select convert(varchar,t.lastruntime,112)+ replace(convert(varchar,t.lastruntime,108),'':'','''') as latestrun from (select max(end_time) as lastruntime from cdp_adl.batchrun where  batch_name=','''',pipeline().Pipeline,'''',')as t')\n",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_az_sql_db",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "batchrun",
                                    "SchemaName": "dbo"
                                }
                            }
                        }
                    },
                    {
                        "name": "last_run",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "lkp_get_last_run",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "lastrun",
                            "value": {
                                "value": "@activity('lkp_get_last_run').output.firstRow.latestrun",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "sp_batchinit",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[cdp_adl].[sp_BatchInit]",
                            "storedProcedureParameters": {
                                "BatchId": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "BatchName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_az_sql_db_cdp",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "sp_batchend",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "ForEach1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[cdp_adl].[sp_BatchEnd]",
                            "storedProcedureParameters": {
                                "BatchId": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "BatchName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_az_sql_db_cdp",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "variables": {
                    "extract_ts": {
                        "type": "String"
                    },
                    "lastrun": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "3. Components"
                },
                "annotations": [],
                "lastPublishTime": "2022-05-11T08:13:23Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_sftp_folder')]",
                "[concat(variables('factoryId'), '/datasets/ds_az_sql_db')]",
                "[concat(variables('factoryId'), '/linkedServices/ls_az_sql_db_cdp')]",
                "[concat(variables('factoryId'), '/datasets/ds_sftp_txt')]",
                "[concat(variables('factoryId'), '/datasets/ds_adls_txt')]",
                "[concat(variables('factoryId'), '/dataflows/df_bkp_and_del_recs')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_src_db_adl_incr_nba')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "gmsftp",
                        "type": "GetMetadata",
                        "dependsOn": [
                            {
                                "activity": "del_src_sftp_done_file",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_sftp_folder",
                                "type": "DatasetReference",
                                "parameters": {
                                    "SFTP_Folder": "/incoming/CDP_ADL/NBA/IncrementFiles/"
                                }
                            },
                            "fieldList": [
                                "childItems"
                            ],
                            "storeSettings": {
                                "type": "SftpReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false,
                                "disableChunking": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "ForEach1",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "gmsftp",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "last_run",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('gmsftp').output.childItems",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "get_file_ts",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "extract_ts",
                                        "value": {
                                            "value": "@split(split(item().name,'NBA_DATA_')[1],'.')[0]",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "If Condition1",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "get_file_ts",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(variables('extract_ts'),variables('extract_ts'))",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "cp_sftp_stg",
                                                "type": "Copy",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "DelimitedTextSource",
                                                        "storeSettings": {
                                                            "type": "SftpReadSettings",
                                                            "recursive": true,
                                                            "enablePartitionDiscovery": false,
                                                            "disableChunking": false
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextReadSettings"
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "DelimitedTextSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobStorageWriteSettings",
                                                            "copyBehavior": "PreserveHierarchy"
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextWriteSettings",
                                                            "quoteAllText": true,
                                                            "fileExtension": ".txt"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "enableSkipIncompatibleRow": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "ds_sftp_txt",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SFTP_FolderName": "/incoming/CDP_ADL/NBA/IncrementFiles/",
                                                            "SFTP_FileName": {
                                                                "value": "@item().name",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "ds_adls_txt",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "ADLS_FolderName": "stg",
                                                            "ADLS_FileName": {
                                                                "value": "@item().name",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "del_src_sftp_file",
                                                "type": "Delete",
                                                "dependsOn": [
                                                    {
                                                        "activity": "df_load_nba_db",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "dataset": {
                                                        "referenceName": "ds_sftp_txt",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SFTP_FolderName": "/incoming/CDP_ADL/NBA/IncrementFiles/",
                                                            "SFTP_FileName": {
                                                                "value": "@item().name",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    },
                                                    "enableLogging": false,
                                                    "storeSettings": {
                                                        "type": "SftpReadSettings",
                                                        "recursive": true,
                                                        "enablePartitionDiscovery": false,
                                                        "disableChunking": false
                                                    }
                                                }
                                            },
                                            {
                                                "name": "df_load_nba_db",
                                                "type": "ExecuteDataFlow",
                                                "dependsOn": [
                                                    {
                                                        "activity": "cp_sftp_stg",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "1.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "dataflow": {
                                                        "referenceName": "df_load_nba_recs",
                                                        "type": "DataFlowReference",
                                                        "parameters": {
                                                            "FileName": {
                                                                "value": "'@{item().name}'",
                                                                "type": "Expression"
                                                            }
                                                        },
                                                        "datasetParameters": {
                                                            "srcadlsfile": {
                                                                "ADLS_FileName": "@item().name"
                                                            },
                                                            "srctblcust": {},
                                                            "tgtdb": {
                                                                "TableName": "brand_site_nba",
                                                                "SchemaName": "cdp_adl"
                                                            }
                                                        }
                                                    },
                                                    "staging": {},
                                                    "compute": {
                                                        "coreCount": 16,
                                                        "computeType": "MemoryOptimized"
                                                    },
                                                    "traceLevel": "None",
                                                    "cacheSinks": {
                                                        "firstRowOnly": true
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "lkp_get_last_run",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "sp_batchinit",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('select convert(varchar,t.lastruntime,112)+ replace(convert(varchar,t.lastruntime,108),'':'','''') as latestrun from (select max(end_time) as lastruntime from cdp_adl.batchrun where  batch_name=','''',pipeline().Pipeline,'''',')as t')\n",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_az_sql_db",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "batchrun",
                                    "SchemaName": "dbo"
                                }
                            }
                        }
                    },
                    {
                        "name": "last_run",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "lkp_get_last_run",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "lastrun",
                            "value": {
                                "value": "@activity('lkp_get_last_run').output.firstRow.latestrun",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "sp_batchinit",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[cdp_adl].[sp_BatchInit]",
                            "storedProcedureParameters": {
                                "BatchId": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "BatchName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_az_sql_db_cdp",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "sp_batchend",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "ForEach1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[cdp_adl].[sp_BatchEnd]",
                            "storedProcedureParameters": {
                                "BatchId": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "BatchName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_az_sql_db_cdp",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "del_src_sftp_done_file",
                        "type": "Delete",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_sftp_txt",
                                "type": "DatasetReference",
                                "parameters": {
                                    "SFTP_FolderName": "/incoming/CDP_ADL/NBA/IncrementFiles/",
                                    "SFTP_FileName": "done.psv"
                                }
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "SftpReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false,
                                "disableChunking": false
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "variables": {
                    "extract_ts": {
                        "type": "String"
                    },
                    "lastrun": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "3. Components/NBA"
                },
                "annotations": [],
                "lastPublishTime": "2022-07-12T08:20:16Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_sftp_folder')]",
                "[concat(variables('factoryId'), '/datasets/ds_az_sql_db')]",
                "[concat(variables('factoryId'), '/linkedServices/ls_az_sql_db_cdp')]",
                "[concat(variables('factoryId'), '/datasets/ds_sftp_txt')]",
                "[concat(variables('factoryId'), '/datasets/ds_adls_txt')]",
                "[concat(variables('factoryId'), '/dataflows/df_load_nba_recs')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_src_db_adl_del_nba')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "gmsftp",
                        "type": "GetMetadata",
                        "dependsOn": [
                            {
                                "activity": "del_src_sftp_done_file",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_sftp_folder",
                                "type": "DatasetReference",
                                "parameters": {
                                    "SFTP_Folder": "/incoming/CDP_ADL/NBA/DeleteFiles/"
                                }
                            },
                            "fieldList": [
                                "childItems"
                            ],
                            "storeSettings": {
                                "type": "SftpReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false,
                                "disableChunking": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "ForEach1",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "gmsftp",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "last_run",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('gmsftp').output.childItems",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "file_ts",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "extract_ts",
                                        "value": {
                                            "value": "@split(split(item().name,'DELETES_')[1],'.')[0]",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "If Condition1",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "file_ts",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(variables('extract_ts'),variables('extract_ts'))",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "cp_sftp_stg",
                                                "type": "Copy",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "DelimitedTextSource",
                                                        "storeSettings": {
                                                            "type": "SftpReadSettings",
                                                            "recursive": true,
                                                            "enablePartitionDiscovery": false,
                                                            "disableChunking": false
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextReadSettings"
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "DelimitedTextSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobStorageWriteSettings",
                                                            "copyBehavior": "PreserveHierarchy"
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextWriteSettings",
                                                            "quoteAllText": true,
                                                            "fileExtension": ".txt"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "enableSkipIncompatibleRow": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "ds_sftp_txt",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SFTP_FolderName": "/incoming/CDP_ADL/NBA/DeleteFiles/",
                                                            "SFTP_FileName": {
                                                                "value": "@item().name",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "ds_adls_txt",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "ADLS_FolderName": "stg",
                                                            "ADLS_FileName": {
                                                                "value": "@item().name",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "del_src_sftp_file",
                                                "type": "Delete",
                                                "dependsOn": [
                                                    {
                                                        "activity": "df_bkp_del_recs",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "dataset": {
                                                        "referenceName": "ds_sftp_txt",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SFTP_FolderName": "/incoming/CDP_ADL/NBA/DeleteFiles/",
                                                            "SFTP_FileName": {
                                                                "value": "@item().name",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    },
                                                    "enableLogging": false,
                                                    "storeSettings": {
                                                        "type": "SftpReadSettings",
                                                        "recursive": true,
                                                        "enablePartitionDiscovery": false,
                                                        "disableChunking": false
                                                    }
                                                }
                                            },
                                            {
                                                "name": "df_bkp_del_recs",
                                                "type": "ExecuteDataFlow",
                                                "dependsOn": [
                                                    {
                                                        "activity": "cp_sftp_stg",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "1.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "dataflow": {
                                                        "referenceName": "df_bkp_and_del_recs_nba",
                                                        "type": "DataFlowReference",
                                                        "parameters": {
                                                            "FileName": {
                                                                "value": "'@{item().name}'",
                                                                "type": "Expression"
                                                            }
                                                        },
                                                        "datasetParameters": {
                                                            "srcadlsnbadelfile": {
                                                                "ADLS_FileName": "@item().name"
                                                            },
                                                            "srcnba": {
                                                                "TableName": "brand_site_nba",
                                                                "SchemaName": "cdp_adl"
                                                            },
                                                            "sinknbabkp": {
                                                                "TableName": "brand_site_nba_deletes",
                                                                "SchemaName": "cdp_adl"
                                                            },
                                                            "sinknba": {
                                                                "TableName": "brand_site_nba",
                                                                "SchemaName": "cdp_adl"
                                                            }
                                                        }
                                                    },
                                                    "staging": {},
                                                    "compute": {
                                                        "coreCount": 16,
                                                        "computeType": "MemoryOptimized"
                                                    },
                                                    "traceLevel": "None",
                                                    "cacheSinks": {
                                                        "firstRowOnly": true
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "lkp_get_last_run",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "sp_batchinit",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('select convert(varchar,t.lastruntime,112)+ replace(convert(varchar,t.lastruntime,108),'':'','''') as latestrun from (select max(end_time) as lastruntime from cdp_adl.batchrun where  batch_name=','''',pipeline().Pipeline,'''',')as t')\n",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_az_sql_db",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": "batchrun",
                                    "SchemaName": "dbo"
                                }
                            }
                        }
                    },
                    {
                        "name": "last_run",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "lkp_get_last_run",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "lastrun",
                            "value": {
                                "value": "@activity('lkp_get_last_run').output.firstRow.latestrun",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "sp_batchinit",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[cdp_adl].[sp_BatchInit]",
                            "storedProcedureParameters": {
                                "BatchId": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "BatchName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_az_sql_db_cdp",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "sp_batchend",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "ForEach1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[cdp_adl].[sp_BatchEnd]",
                            "storedProcedureParameters": {
                                "BatchId": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "BatchName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_az_sql_db_cdp",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "del_src_sftp_done_file",
                        "type": "Delete",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_sftp_txt",
                                "type": "DatasetReference",
                                "parameters": {
                                    "SFTP_FolderName": "/incoming/CDP_ADL/NBA/DeleteFiles/",
                                    "SFTP_FileName": "done.psv"
                                }
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "SftpReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false,
                                "disableChunking": false
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "variables": {
                    "extract_ts": {
                        "type": "String"
                    },
                    "lastrun": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "3. Components/NBA"
                },
                "annotations": [],
                "lastPublishTime": "2022-07-12T08:21:04Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_sftp_folder')]",
                "[concat(variables('factoryId'), '/datasets/ds_az_sql_db')]",
                "[concat(variables('factoryId'), '/linkedServices/ls_az_sql_db_cdp')]",
                "[concat(variables('factoryId'), '/datasets/ds_sftp_txt')]",
                "[concat(variables('factoryId'), '/datasets/ds_adls_txt')]",
                "[concat(variables('factoryId'), '/dataflows/df_bkp_and_del_recs_nba')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/mpl_cdp_adl_nba')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Data_Load",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pl_src_db_adl_incr_nba",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "Deletions",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Data_Load",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pl_src_db_adl_del_nba",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "folder": {
                    "name": "1. Daily Run"
                },
                "annotations": [],
                "lastPublishTime": "2022-06-30T07:39:31Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/pl_src_db_adl_incr_nba')]",
                "[concat(variables('factoryId'), '/pipelines/pl_src_db_adl_del_nba')]"
            ]
        }
    ]
}